-- Purpose of this script is for a CC Tweaked Minecraft Turtle to collect
-- oil blocks out on the ocean. While it should not need to clear any blocks to do this,
-- the turtle will equip a tool anyway.

-- Example oil location: x=45, z=708, y=62

local global_step_width = 2 -- How far left and right it will search on each layer.
local global_distance_limit = 2 -- How long that layer is. Doesn't have to be square!
local global_depth_limit = -20 -- How much y_change should occur at max. Must match the direction. (negative/down)
local global_should_refuel = false -- Set to true for a big run, false to collect coal!
local y_change = 0  -- Should be updated at every altitude change.

local interesting_blocks = {
  "ad_astra:oil",
  "ad_astra:flowing_oil",
}
local bucket_item_name = "minecraft:bucket"

local common = require("common")

-- World interaction functions

-- You have to select a bucket in separate function before this will work.
-- See `find_and_select_matching_item`
function collect_oil()
  local could_pick_up, err = turtle.placeDown()
  if could_pick_up then
    common.log("Picked up oil!")
  else
    common.log("Tried but failed to pick up oil! Reason: " .. err)
  end
end

function detect_any_oil_blocks(oil_block_names)
  for _, oil_block_name in ipairs(oil_block_names) do
    if is_oil == common.inspect_block_below(oil_block_name) then
      -- Return on first success.
      return is_oil
    end
  end
  -- No matches, not oil.
  return false
end

-- Check directly ahead of us for oil to pick up.
function attempt_oil_gather(debug)
  -- TODO Remove as unused?
  debug = debug or false
  local is_oil = detect_any_oil_blocks(interesting_blocks)

  if is_oil then
    -- We have oil. Do we have a bucket for it?
    local did_find_bucket = common.find_and_select_matching_item(bucket_item_name)
    if not did_find_bucket then
      common.log("We have no bucket to use! Returning home.")
      common.return_home()
    end
    common.log("Found oil! Collecting...")
    collect_oil()
  else
    common.log("Did not detect an oil block.")
  end

  if full_tank then
    common.log("Tank is full - returning home!")
    return common.return_home()
  end
end

-- Given a distance limit, cover a nxn square to find and pick up liquids.
function move_strategy_by_layer__pick_up_liquids(distance_limit, step_width, debug)
  debug = debug or false
  local did_find_bucket = common.find_and_select_matching_item(bucket_item_name)
  if not did_find_bucket then
    common.log("We have no bucket to use! Stopping.")
    common.stop()
  end

  -- If a bucket was found, we'll know the turtle is ready when it steps forward into the
  -- oil field. This implies of course that you always start the turtle on the sidelines
  -- of the oil field, not in it proper.
  common.forward()

  for y_step = 0, global_depth_limit, -1 do
    common.log("y_step now at " .. y_step .. "/" .. global_depth_limit)
    -- On the same y_level, find oil and pick it up.
    for step = 1, distance_limit do
      common.should_refuel(global_should_refuel)
      common.clear_exclusions_from_inventory()
      turtle.turnLeft()  -- Place down facing the wall, it turns left to work first strip
      for leftward = 1, step_width do
        attempt_oil_gather(debug)
        common.forward(step)
      end
      -- We are now at the end of a step, facing left of where we started.
      turtle.turnRight() -- Facing forward once again
      attempt_oil_gather(debug)
      common.forward(step) -- Now standing over the next step.

      -- Time to turn around and start another layer?
      if distance_limit - step == 1 then
        -- We are on the last zag of this zigzag. :D
        local could_move = common.down(step)
        if could_move then
          y_change = y_change - 1
        end
        turtle.turnLeft()
        turtle.turnLeft()
      else
        -- We do this in the else block because otherwise we wouldn't
        -- do a full square, we'd just zigzag and mess it up.
        turtle.turnRight() -- Face down the rightward step.
        for rightward = 1, step_width do
          attempt_oil_gather(debug)
          common.forward(step)
        end
        -- We are now facing right of where we started.
        turtle.turnLeft()
        attempt_oil_gather(debug)
        common.forward(step) -- Now over the next leftward step.
        -- And we're ready to start the next.
      end
    end -- Layer loop.
  end -- y_change loop.
end

common.log("Beginning oilrig - main.")

-- Main loop goes here
-- https://claude.ai/chat/5a5ac357-24a1-43a0-9d65-79586b5a58f1
-- https://tweaked.cc/module/turtle.html#v:place

common.find_and_equip_tool()
common.find_and_consume_fuel()

-- Debugging
common.find_and_select_matching_item(bucket_item_name, true)

move_strategy_by_layer__pick_up_liquids(global_distance_limit, global_step_width)

common.log("Exiting oilrig.")
